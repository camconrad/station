"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/contractUtils.ts":
/*!********************************!*\
  !*** ./utils/contractUtils.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   completeTaskOnContract: function() { return /* binding */ completeTaskOnContract; },\n/* harmony export */   connectWallet: function() { return /* binding */ connectWallet; },\n/* harmony export */   createTaskOnContract: function() { return /* binding */ createTaskOnContract; },\n/* harmony export */   getStationContract: function() { return /* binding */ getStationContract; },\n/* harmony export */   startTaskOnContract: function() { return /* binding */ startTaskOnContract; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _StationABI_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StationABI.json */ \"./utils/StationABI.json\");\n\n\nconst STATION_ADDRESS = \"0x46C4DC3785c8baD38DDBfB6fAB61fBe0833B5f9A\";\n// Connect to wallet\nconst connectWallet = async ()=>{\n    if (typeof window.ethereum !== \"undefined\") {\n        try {\n            await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            return {\n                provider,\n                signer\n            };\n        } catch (error) {\n            console.error(\"Wallet connection failed:\", error);\n            return null;\n        }\n    } else {\n        console.error(\"MetaMask is not installed\");\n        return null;\n    }\n};\n// Get Station contract instance\nconst getStationContract = (signerOrProvider)=>{\n    return new ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.Contract(STATION_ADDRESS, _StationABI_json__WEBPACK_IMPORTED_MODULE_0__, signerOrProvider);\n};\n// Create task on the contract\nconst createTaskOnContract = async (contract, description, assignee, reward)=>{\n    try {\n        const tx = await contract.createTask(description, assignee, ethers__WEBPACK_IMPORTED_MODULE_1__.ethers.utils.parseUnits(reward.toString(), 6));\n        await tx.wait();\n        console.log(\"Task created on contract:\", tx);\n    } catch (error) {\n        console.error(\"Error creating task on contract:\", error);\n        throw error;\n    }\n};\n// Start task on the contract\nconst startTaskOnContract = async (contract, taskId)=>{\n    try {\n        const tx = await contract.startTask(taskId);\n        await tx.wait();\n        console.log(\"Task started on contract:\", tx);\n    } catch (error) {\n        console.error(\"Error starting task on contract:\", error);\n        throw error;\n    }\n};\n// Complete task on the contract\nconst completeTaskOnContract = async (contract, taskId)=>{\n    try {\n        const tx = await contract.completeTask(taskId);\n        await tx.wait();\n        console.log(\"Task completed on contract:\", tx);\n    } catch (error) {\n        console.error(\"Error completing task on contract:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9jb250cmFjdFV0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0I7QUFDVztBQUUxQyxNQUFNRSxrQkFBa0I7QUFFeEIsb0JBQW9CO0FBQ2IsTUFBTUMsZ0JBQWdCO0lBQzNCLElBQUksT0FBT0MsT0FBT0MsUUFBUSxLQUFLLGFBQWE7UUFDMUMsSUFBSTtZQUNGLE1BQU1ELE9BQU9DLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDO2dCQUFFQyxRQUFRO1lBQXNCO1lBQzlELE1BQU1DLFdBQVcsSUFBSVIsMENBQU1BLENBQUNTLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDTixPQUFPQyxRQUFRO1lBQ2xFLE1BQU1NLFNBQVNILFNBQVNJLFNBQVM7WUFDakMsT0FBTztnQkFBRUo7Z0JBQVVHO1lBQU87UUFDNUIsRUFBRSxPQUFPRSxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyw2QkFBNkJBO1lBQzNDLE9BQU87UUFDVDtJQUNGLE9BQU87UUFDTEMsUUFBUUQsS0FBSyxDQUFDO1FBQ2QsT0FBTztJQUNUO0FBQ0YsRUFBQztBQUVELGdDQUFnQztBQUN6QixNQUFNRSxxQkFBcUIsQ0FBQ0M7SUFDakMsT0FBTyxJQUFJaEIsMENBQU1BLENBQUNpQixRQUFRLENBQUNmLGlCQUFpQkQsNkNBQVVBLEVBQUVlO0FBQzFELEVBQUM7QUFFRCw4QkFBOEI7QUFDdkIsTUFBTUUsdUJBQXVCLE9BQ2xDQyxVQUNBQyxhQUNBQyxVQUNBQztJQUVBLElBQUk7UUFDRixNQUFNQyxLQUFLLE1BQU1KLFNBQVNLLFVBQVUsQ0FBQ0osYUFBYUMsVUFBVXJCLDBDQUFNQSxDQUFDeUIsS0FBSyxDQUFDQyxVQUFVLENBQUNKLE9BQU9LLFFBQVEsSUFBSTtRQUN2RyxNQUFNSixHQUFHSyxJQUFJO1FBQ2JkLFFBQVFlLEdBQUcsQ0FBQyw2QkFBNkJOO0lBQzNDLEVBQUUsT0FBT1YsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxNQUFNQTtJQUNSO0FBQ0YsRUFBQztBQUVELDZCQUE2QjtBQUN0QixNQUFNaUIsc0JBQXNCLE9BQU9YLFVBQTJCWTtJQUNuRSxJQUFJO1FBQ0YsTUFBTVIsS0FBSyxNQUFNSixTQUFTYSxTQUFTLENBQUNEO1FBQ3BDLE1BQU1SLEdBQUdLLElBQUk7UUFDYmQsUUFBUWUsR0FBRyxDQUFDLDZCQUE2Qk47SUFDM0MsRUFBRSxPQUFPVixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE1BQU1BO0lBQ1I7QUFDRixFQUFDO0FBRUQsZ0NBQWdDO0FBQ3pCLE1BQU1vQix5QkFBeUIsT0FBT2QsVUFBMkJZO0lBQ3RFLElBQUk7UUFDRixNQUFNUixLQUFLLE1BQU1KLFNBQVNlLFlBQVksQ0FBQ0g7UUFDdkMsTUFBTVIsR0FBR0ssSUFBSTtRQUNiZCxRQUFRZSxHQUFHLENBQUMsK0JBQStCTjtJQUM3QyxFQUFFLE9BQU9WLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHNDQUFzQ0E7UUFDcEQsTUFBTUE7SUFDUjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvY29udHJhY3RVdGlscy50cz9hMTA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV0aGVycyB9IGZyb20gJ2V0aGVycydcbmltcG9ydCBTdGF0aW9uQUJJIGZyb20gJy4vU3RhdGlvbkFCSS5qc29uJ1xuXG5jb25zdCBTVEFUSU9OX0FERFJFU1MgPSAnMHg0NkM0REMzNzg1YzhiYUQzOEREQmZCNmZBQjYxZkJlMDgzM0I1ZjlBJ1xuXG4vLyBDb25uZWN0IHRvIHdhbGxldFxuZXhwb3J0IGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSAndW5kZWZpbmVkJykge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnIH0pXG4gICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pXG4gICAgICBjb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKVxuICAgICAgcmV0dXJuIHsgcHJvdmlkZXIsIHNpZ25lciB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1dhbGxldCBjb25uZWN0aW9uIGZhaWxlZDonLCBlcnJvcilcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUuZXJyb3IoJ01ldGFNYXNrIGlzIG5vdCBpbnN0YWxsZWQnKVxuICAgIHJldHVybiBudWxsXG4gIH1cbn1cblxuLy8gR2V0IFN0YXRpb24gY29udHJhY3QgaW5zdGFuY2VcbmV4cG9ydCBjb25zdCBnZXRTdGF0aW9uQ29udHJhY3QgPSAoc2lnbmVyT3JQcm92aWRlcjogZXRoZXJzLlNpZ25lciB8IGV0aGVycy5wcm92aWRlcnMuUHJvdmlkZXIpID0+IHtcbiAgcmV0dXJuIG5ldyBldGhlcnMuQ29udHJhY3QoU1RBVElPTl9BRERSRVNTLCBTdGF0aW9uQUJJLCBzaWduZXJPclByb3ZpZGVyKVxufVxuXG4vLyBDcmVhdGUgdGFzayBvbiB0aGUgY29udHJhY3RcbmV4cG9ydCBjb25zdCBjcmVhdGVUYXNrT25Db250cmFjdCA9IGFzeW5jIChcbiAgY29udHJhY3Q6IGV0aGVycy5Db250cmFjdCxcbiAgZGVzY3JpcHRpb246IHN0cmluZyxcbiAgYXNzaWduZWU6IHN0cmluZyxcbiAgcmV3YXJkOiBudW1iZXJcbikgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHR4ID0gYXdhaXQgY29udHJhY3QuY3JlYXRlVGFzayhkZXNjcmlwdGlvbiwgYXNzaWduZWUsIGV0aGVycy51dGlscy5wYXJzZVVuaXRzKHJld2FyZC50b1N0cmluZygpLCA2KSlcbiAgICBhd2FpdCB0eC53YWl0KClcbiAgICBjb25zb2xlLmxvZygnVGFzayBjcmVhdGVkIG9uIGNvbnRyYWN0OicsIHR4KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHRhc2sgb24gY29udHJhY3Q6JywgZXJyb3IpXG4gICAgdGhyb3cgZXJyb3JcbiAgfVxufVxuXG4vLyBTdGFydCB0YXNrIG9uIHRoZSBjb250cmFjdFxuZXhwb3J0IGNvbnN0IHN0YXJ0VGFza09uQ29udHJhY3QgPSBhc3luYyAoY29udHJhY3Q6IGV0aGVycy5Db250cmFjdCwgdGFza0lkOiBudW1iZXIpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0eCA9IGF3YWl0IGNvbnRyYWN0LnN0YXJ0VGFzayh0YXNrSWQpXG4gICAgYXdhaXQgdHgud2FpdCgpXG4gICAgY29uc29sZS5sb2coJ1Rhc2sgc3RhcnRlZCBvbiBjb250cmFjdDonLCB0eClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzdGFydGluZyB0YXNrIG9uIGNvbnRyYWN0OicsIGVycm9yKVxuICAgIHRocm93IGVycm9yXG4gIH1cbn1cblxuLy8gQ29tcGxldGUgdGFzayBvbiB0aGUgY29udHJhY3RcbmV4cG9ydCBjb25zdCBjb21wbGV0ZVRhc2tPbkNvbnRyYWN0ID0gYXN5bmMgKGNvbnRyYWN0OiBldGhlcnMuQ29udHJhY3QsIHRhc2tJZDogbnVtYmVyKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5jb21wbGV0ZVRhc2sodGFza0lkKVxuICAgIGF3YWl0IHR4LndhaXQoKVxuICAgIGNvbnNvbGUubG9nKCdUYXNrIGNvbXBsZXRlZCBvbiBjb250cmFjdDonLCB0eClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjb21wbGV0aW5nIHRhc2sgb24gY29udHJhY3Q6JywgZXJyb3IpXG4gICAgdGhyb3cgZXJyb3JcbiAgfVxufVxuIl0sIm5hbWVzIjpbImV0aGVycyIsIlN0YXRpb25BQkkiLCJTVEFUSU9OX0FERFJFU1MiLCJjb25uZWN0V2FsbGV0Iiwid2luZG93IiwiZXRoZXJldW0iLCJyZXF1ZXN0IiwibWV0aG9kIiwicHJvdmlkZXIiLCJwcm92aWRlcnMiLCJXZWIzUHJvdmlkZXIiLCJzaWduZXIiLCJnZXRTaWduZXIiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRTdGF0aW9uQ29udHJhY3QiLCJzaWduZXJPclByb3ZpZGVyIiwiQ29udHJhY3QiLCJjcmVhdGVUYXNrT25Db250cmFjdCIsImNvbnRyYWN0IiwiZGVzY3JpcHRpb24iLCJhc3NpZ25lZSIsInJld2FyZCIsInR4IiwiY3JlYXRlVGFzayIsInV0aWxzIiwicGFyc2VVbml0cyIsInRvU3RyaW5nIiwid2FpdCIsImxvZyIsInN0YXJ0VGFza09uQ29udHJhY3QiLCJ0YXNrSWQiLCJzdGFydFRhc2siLCJjb21wbGV0ZVRhc2tPbkNvbnRyYWN0IiwiY29tcGxldGVUYXNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/contractUtils.ts\n"));

/***/ })

});